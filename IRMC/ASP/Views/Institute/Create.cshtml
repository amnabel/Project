@model Domaine.Entity.institute

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutIrmc.cshtml";
}

<div class="col-md-8 text-center mb-5">

    <h2 class="text-uppercase heading border-bottom mb-4"> ADD Institute</h2>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sigle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sigle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sigle, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.code_postale, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.code_postale, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.code_postale, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.website, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">

                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Mediatheque",
                        Value = "Mediatheque"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Bibliotheque",
                        Value = "Bibliotheque",
                        Selected = true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Archives",
                        Value = "Archives"
                    });
                }

                @Html.DropDownListFor(model => model.type, listItems, "", new { htmlAttributes = new { @class = "form-control", } })
            </div>
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("Image", null, new { type = "file" })
            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
        </div>
    </div>

    



    <div class="form-group">
        @Html.LabelFor(model => model.type_acces, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">

                @{
                    List<SelectListItem> listItemstype = new List<SelectListItem>();
                    listItemstype.Add(new SelectListItem
                    {
                        Text = "Payant",
                        Value = "Payant"
                    });
                    listItemstype.Add(new SelectListItem
                    {
                        Text = "Free",
                        Value = "Free",
                        Selected = true
                    });
                   
                }

                @Html.DropDownListFor(model => model.type_acces, listItemstype, "", new { htmlAttributes = new { @class = "form-control", } })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="ADD" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
